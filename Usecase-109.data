        // create an array with nodes
        var nodes = new vis.DataSet([{id: 7, label: 'NEST code with abstracted neuron model representations', color: 'rgba(97,195,238,1.0)'},
{id: 19, label: 'Streaming, steering and data analysis of NEST - VisNEST', color: 'rgba(97,195,238,1.0)'},
{id: 5, label: 'Model of biologically-realistic network states', color: 'rgba(97,195,238,1.0)'},
{id: 4, label: 'Mean-field models of interacting populations of rate and spiking neurons', color: 'rgba(97,195,238,1.0)'},
{id: 18, label: 'SP6-T6.3.6-SGA1-Tools for configuring stimulation and recording in NEST simulations', color: 'rgba(97,195,238,1.0)'},
{id: 3, label: 'HPC systems at JSC', color: 'rgba(97,195,238,1.0)'},
{id: 2, label: 'HPC systems at Cineca', color: 'rgba(97,195,238,1.0)'},
{id: 1, label: 'Collective behaviour of mean-field and neural population models: A comparative study', color: 'rgba(97,195,238,1.0)'},
{id: 20, label: 'VisNEST', color: 'rgba(97,195,238,1.0)'},
{id: 11, label: 'NEST - The Neural Simulation Tool', color: 'rgba(97,195,238,1.0)'},
{id: 6, label: 'Model of calcium imaging signals', color: 'rgba(97,195,238,1.0)'},
{id: 9, label: 'NEST Support for Modellers', color: 'rgba(97,195,238,1.0)'},
{id: 10, label: 'NEST Support for Providers', color: 'rgba(97,195,238,1.0)'},
{id: 8, label: 'NEST Requirements Management', color: 'rgba(97,195,238,1.0)'},
{id: 17, label: 'SP6-T6.3.5-SGA1-Prototype NEST simulation kernel with directed spike exchange', color: 'rgba(97,195,238,1.0)'},
{id: 12, label: 'NEST with enabled malleability', color: 'rgba(97,195,238,1.0)'},
{id: 16, label: 'SP6-T6.2.7-SGA1-Simplified brain models', color: 'rgba(97,195,238,1.0)'},
{id: 13, label: 'Point-neuron model of the whole mouse brain', color: 'rgba(97,195,238,1.0)'},
{id: 15, label: 'Population density techniques for the simulation of populations and neural circuits', color: 'rgba(97,195,238,1.0)'},
{id: 14, label: 'population activity equations: Finite-N mean-field model for interacting populations (with adaptation)', color: 'rgba(97,195,238,1.0)'}]);

        // create an array with edges
        var edges = new vis.DataSet([{from: 18, to: 16, arrows: 'to'},
{from: 18, to: 19, arrows: 'to'},
{from: 18, to: 19, arrows: 'to'},
{from: 10, to: 8, arrows: 'to'},
{from: 9, to: 16, arrows: 'to'},
{from: 9, to: 8, arrows: 'to'},
{from: 19, to: 8, arrows: 'to'},
{from: 7, to: 8, arrows: 'to'},
{from: 7, to: 11, arrows: 'to'},
{from: 14, to: 1, arrows: 'to'},
{from: 14, to: 4, arrows: 'to'},
{from: 14, to: 15, arrows: 'to'},
{from: 16, to: 13, arrows: 'to'},
{from: 16, to: 17, arrows: 'to'},
{from: 4, to: 1, arrows: 'to'},
{from: 17, to: 13, arrows: 'to'},
{from: 20, to: 9, arrows: 'to'},
{from: 20, to: 19, arrows: 'to'},
{from: 11, to: 13, arrows: 'to'},
{from: 11, to: 16, arrows: 'to'},
{from: 11, to: 20, arrows: 'to'},
{from: 11, to: 17, arrows: 'to'},
{from: 11, to: 18, arrows: 'to'},
{from: 11, to: 8, arrows: 'to'},
{from: 11, to: 10, arrows: 'to'},
{from: 11, to: 9, arrows: 'to'},
{from: 11, to: 19, arrows: 'to'},
{from: 8, to: 19, arrows: 'to'},
{from: 8, to: 17, arrows: 'to'},
{from: 8, to: 7, arrows: 'to'},
{from: 8, to: 10, arrows: 'to'},
{from: 8, to: 9, arrows: 'to'},
{from: 12, to: 11, arrows: 'to'}]);

